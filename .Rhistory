pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2) %>%   # удаляем диагональ
ggplot(aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2) %>%   # удаляем диагональ
ggplot(aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
knitr::opts_chunk$set(echo = TRUE,
error = FALSE,
message = FALSE,
warning = FALSE)
#Задаем рабочую директорию
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
#Подгружаем библиотеки
library(tidyr)
library(dplyr)
library(ggplot2)
library(DescTools)
#Загружаем таблицу
data <- read.csv("day.csv", header = T)
str(data)
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})
data_wo_na <- na.omit(data)
sapply(data_wo_na[c(3:9)], FUN = function(x) {
unique(x)
})
fac_data_wo_na <- data_wo_na %>%
mutate(across(where(is.integer) & !c('instant', 'casual', 'registered', 'cnt'), as.factor))
str(fac_data_wo_na)
fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2) %>%   # удаляем диагональ
ggplot(aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
fac_data_wo_na_and_outs <- fac_data_wo_na %>% filter(!(atemp < 0.3 & temp > 0.5))
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_dadta, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
View(outlier_graph_data)
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))
geom_point(size=0.5)
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
print(ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')) # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
(ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')) # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') %>% # делим дот плоты по соответствующим панелям
print()
knitr::opts_chunk$set(echo = TRUE,
error = FALSE,
warning = FALSE)
#Задаем рабочую директорию
main_dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(main_dir)
#Подгружаем библиотеки
library(tidyr)
library(dplyr)
library(ggplot2)
library(DescTools)
#Загружаем таблицу
data <- read.csv("day.csv", header = T)
str(data)
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})
data_wo_na <- na.omit(data)
sapply(data_wo_na[c(3:9)], FUN = function(x) {
unique(x)
})
fac_data_wo_na <- data_wo_na %>%
mutate(across(where(is.integer) & !c('instant', 'casual', 'registered', 'cnt'), as.factor))
str(fac_data_wo_na)
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') %>% # делим дот плоты по соответствующим панелям
print()
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
library(ggplot2)
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free') # делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
outlier_graph_data <- fac_data_wo_na %>%
select(where(~ is.numeric(.) | is.integer(.))) %>% # выбрали количественные переменные
pivot_longer(-instant, names_to = "vars1", values_to = "vals1") %>% # перевели в длинный формат
full_join(fac_data_wo_na %>%                              #объединяем с такой же длинной таблицей попарно
select(where(~ is.numeric(.) | is.integer(.))) %>%
pivot_longer(-instant, names_to = 'vars2', values_to = 'vals2'),
by = 'instant') %>%
filter(vars1 != vars2)   # удаляем диагональ
ggplot(outlier_graph_data, aes(x = vals1, y = vals2))+ # создаем оси Х и У
geom_point(size=0.5)+ # рисуем дот плот
facet_grid(vars2 ~ vars1, scales='free')+
theme_bw()# делим дот плоты по соответствующим панелям
word_data <- fac_data_wo_na_and_outs
summary(work_data)
work_data <- fac_data_wo_na_and_outs
summary(work_data)
summary(work_data)
str(work_data)
summary(work_data)
cor_matrix <- cor(x = work_data %>% select(where(!is.factor)), method = "pearson")
cor_matrix <- cor(x = work_data %>% select(where(~ !is.factor(.))), method = "pearson")
work_data %>% select(where(~ !is.factor(.)))
cor_matrix <- cor(x = work_data[, 3:] %>% select(where(~ !is.factor(.))), method = "pearson")
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))), method = "pearson")
cor_table <- as.data.frame(cor_matrix)
View(cor_table)
pivot_longer(data = cor_table, names_to = "sample2")
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))), method = "spearman")
cor_table <- as.data.frame(cor_matrix)
pivot_longer(data = cor_table, cols = all(), names_to = "") %>%
ggplot(mapping = aes(x = sample1, y = sample2, fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = everything(), names_to = "") %>%
ggplot(mapping = aes(x = sample1, y = sample2, fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = everything(), names_to = "")
pivot_longer(data = cor_table, cols = everything, names_to = "") %>%
ggplot(mapping = aes(x = sample1, y = sample2, fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = all, names_to = "") %>%
ggplot(mapping = aes(x = sample1, y = sample2, fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = all(), names_to = "cor_coef")
pivot_longer(data = cor_table, cols = everything(), names_to = "cor_coef")
pivot_longer(data = cor_table, cols = everything(), names_to = "cor_coef") %>%
ggplot(mapping = aes(x = colnames, y = rownames, fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = everything(), names_to = "cor_coef") %>%
ggplot(mapping = aes(x = colnames(), y = rownames(), fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = everything(), names_to = "cor_coef") %>%
ggplot(mapping = aes(x = colnames(cor_table), y = rownames(cor_table), fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))), method = "spearman")
pivot_longer(data = cor_matrix, cols = everything(), names_to = "cor_coef") %>%
ggplot(mapping = aes(x = colnames(cor_table), y = rownames(cor_table), fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))), method = "spearman")
View(cor_matrix)
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman")
cor_table <- as.data.frame(cor_matrix)
pivot_longer(data = cor_matrix, cols = everything(), names_to = "cor_coef") %>%
ggplot(mapping = aes(x = colnames(cor_table), y = rownames(cor_table), fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = everything(), names_to = "cor_coef") %>%
ggplot(mapping = aes(x = colnames(cor_table), y = rownames(cor_table), fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "cor_coef")
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef')
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = rowname, y = param2, fill = value)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = rowname, y = param2, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "")
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "", legend='Spearman correlation coefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "", legend.title='Spearman correlation coefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "", fill='Spearman correlation coefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\n coefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>%
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) +
geom_tile() +
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\ncoefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>% # получили длинный формат
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) + #рисуем график
geom_tile() +
scale_fill_gradient(low='white', high='darkred')
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\ncoefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>% # получили длинный формат
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) + #рисуем график
geom_tile() +
scale_fill_gradient(low='white', high='darkred')
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\ncoefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>% # получили длинный формат
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) + #рисуем график
geom_tile() +
scale_fill_gradient(low='white', high='darkred')+
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\ncoefficient')
cor_matrix <- cor(x = work_data[, 3:16] %>% select(where(~ !is.factor(.))),
use = "pairwise.complete.obs",
method = "spearman") #получили матрицу корреляций
cor_table <- as.data.frame(cor_matrix) #превратили ее в датафрейм
cor_table <- tibble::rownames_to_column(cor_table)
pivot_longer(data = cor_table, cols = -rowname, names_to = "param2", values_to = 'cor_coef') %>% # получили длинный формат
ggplot(mapping = aes(x = param2, y = rowname, fill = cor_coef)) + #рисуем график
geom_tile() +
scale_fill_gradient(low='white', high='darkred')+
theme_bw() +
labs(x = "", y = "", fill='Spearman\ncorrelation\ncoefficient')
grouped_means <- work_data %>% select(c(mnth, yr, casual, registered)) %>%
group_by(across(c(yr, mnth))) %>%
summarise(mean_casual = mean(casual, na.rm=T),
mean_reg = mean(registered, na.rm=T),
mean_cnt = mean(cnt, na.rm=T))
grouped_means <- work_data %>% select(c(mnth, yr, casual, registered, cnt)) %>%
group_by(across(c(yr, mnth))) %>%
summarise(mean_casual = mean(casual, na.rm=T),
mean_reg = mean(registered, na.rm=T),
mean_cnt = mean(cnt, na.rm=T))
ggplot(data = grouped_means, aes(x = mnth, y = mean_cnt))+
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~ yr)
grouped_means <- work_data %>% select(c(mnth, yr, casual, registered, cnt)) %>%
group_by(across(c(yr, mnth))) %>%
summarise(mean_casual = mean(casual, na.rm=T),
mean_reg = mean(registered, na.rm=T),
mean_cnt = mean(cnt, na.rm=T)) %>%
ungroup()
ggplot(data = grouped_means, aes(x = mnth, y = mean_cnt))+
geom_bar(stat="identity", position=position_dodge())+
facet_wrap(~ yr)
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})[!na]
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})[!NA]
sapply(data, FUN = function(x) {
table(is.na(x))[2]
})[!=NA]
